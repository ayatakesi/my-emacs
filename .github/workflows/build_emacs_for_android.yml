# This file contains patches described in the GNU Emacs documentation,
# and may be redistributed and/or modified under the terms of the GNU
# General Public License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
name: run configure and make Emacs
on:
  workflow_dispatch:
jobs:
  job1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-version: [33]
        # ndk-version: [23.2.8568313, 24.0.8215888, 25.2.9519653]
        ndk-version: [25.2.9519653]
        # abi: [i686, x86_64, aarch64, armv7a, mips64, mips, arm]
        abi: [aarch64]
        # minsdk: [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
        minsdk: [33]
    steps:
      # Setup java/jdk.
    - name: Setup java environment
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 11
      #
      # Setup android environment.
    - name: Setup android
      uses: android-actions/setup-android@v2
      #
      # Checkout source.
    - name: Checkout source
      uses: actions/checkout@v3
      #
      # Get dependency of GNUTLS: gnutls
      # MEMO:
      #   gnutls is only ported to x86_64, armv7, aarch64
    - name: get gnutls from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/gnutls-3.7.8-emacs.tar.gz
        tar xvfz gnutls-3.7.8-emacs.tar.gz
      #
      # Get dependency of GNUTLS: gmp
    - name: get gmp from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/gmp-6.2.1-emacs.tgz
        tar xvfz gmp-6.2.1-emacs.tgz
      #
      # Get dependency of GNUTLS: libtasn1
    - name: get libtasn1 from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/libtasn1-4.19.0-emacs.tar.gz
        tar xvfz libtasn1-4.19.0-emacs.tar.gz
    #
    # Get dependency of GNUTLS: p11-ki
    - name: get p11-kit from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/p11-kit-0.24.1-emacs.tar.gz
        tar xvfz p11-kit-0.24.1-emacs.tar.gz
    #
    # Get dependency of GNUTLS: nettle
    - name: get nettle from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/nettle-3.8-emacs.tar.gz
        tar xvfz nettle-3.8-emacs.tar.gz
    #
    # Get TREE-SITTER
    - name: get tree-sitter from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/tree-sitter-0.20.7-emacs.tar.gz
        tar xvfz tree-sitter-0.20.7-emacs.tar.gz
    #
    # Get HARFBUZZ
    - name: get harfbuzz from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/harfbuzz-7.1.0-emacs.tar.gz
        tar xvfz harfbuzz-7.1.0-emacs.tar.gz
    #
    # Get sqlite3
    - name: get sqlite3 and patch it
      run: |
        git clone https://android.googlesource.com/platform/external/sqlite
        git -C sqlite checkout f63e8d96e298783c310c08030d4c51a875dae4cd
        patch --directory=sqlite -p1 <<'EOS'
        diff --git a/dist/Android.mk b/dist/Android.mk
        index bf277d2..36734d9 100644
        --- a/dist/Android.mk
        +++ b/dist/Android.mk
        @@ -141,6 +141,7 @@ include $(BUILD_HOST_EXECUTABLE)
         include $(CLEAR_VARS)
         LOCAL_SRC_FILES := $(common_src_files)
         LOCAL_CFLAGS += $(minimal_sqlite_flags)
        +LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)
         LOCAL_MODULE:= libsqlite_static_minimal
         LOCAL_SDK_VERSION := 23
         include $(BUILD_STATIC_LIBRARY)
        
        diff --git a/dist/sqlite3.c b/dist/sqlite3.c
        index b0536a4..8fa1ee9 100644
        --- a/dist/sqlite3.c
        +++ b/dist/sqlite3.c
        @@ -26474,7 +26474,7 @@ SQLITE_PRIVATE const char *sqlite3OpcodeName(int i){
         */
         #if !defined(HAVE_POSIX_FALLOCATE) \
               && (_XOPEN_SOURCE >= 600 || _POSIX_C_SOURCE >= 200112L)
        -# define HAVE_POSIX_FALLOCATE 1
        +/* # define HAVE_POSIX_FALLOCATE 1 */
         #endif
        
         /*
        EOS
    #
    # Run autogen.sh
    - name: run autogen.sh
      run: |
        ./autogen.sh
    #
    # Run configure
    - name: run configure
      run: >-
        ./configure
        --with-android=$ANDROID_HOME/platforms/android-${{ matrix.api-version }}/android.jar
        ANDROID_CC=$ANDROID_HOME/ndk/${{ matrix.ndk-version }}/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ matrix.abi }}-linux-android${{ matrix.minsdk }}-clang
        SDK_BUILD_TOOLS=$ANDROID_HOME/build-tools/33.0.0
        "--with-ndk-path=$(pwd)/gmp-6.2.1 $(pwd)/gnutls-3.7.8 $(pwd)/libtasn1-4.19.0 $(pwd)/nettle-3.8 $(pwd)/p11-kit-0.24.1 $(pwd)/tree-sitter-0.20.7 $(pwd)/harfbuzz-7.1.0 $(pwd)/sqlite/dist"
        --with-shared-user-id=com.termux
    #
    # Run make to build apk.
    - name: run make
      run: |
        make -j$(nproc)
    #
    # Upload apk as artifacts.
    - name: upload apk
      uses: actions/upload-artifact@v3
      with:
        name: Emacs.apk
        path: ./java/*.apk
