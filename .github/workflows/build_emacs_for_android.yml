# This file contains patches described in the GNU Emacs documentation,
# and may be redistributed and/or modified under the terms of the GNU
# General Public License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
name: run configure and make Emacs
on:
  workflow_dispatch:
jobs:
  job1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-version: [33]
        # ndk-version: [23.2.8568313, 24.0.8215888, 25.2.9519653]
        ndk-version: [25.2.9519653]
        # abi: [i686, x86_64, aarch64, armv7a, mips64, mips, arm]
        abi: [aarch64]
        # minsdk: [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
        minsdk: [26, 33]
    steps:
      # Setup java/jdk.
    - name: Setup java environment
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 11
      #
      # Setup android environment.
    - name: Setup android
      uses: android-actions/setup-android@v2
      #
      # Checkout source.
    - name: Checkout source
      uses: actions/checkout@v3
      #
      # Get dependency of GNUTLS: gnutls and apply patch to make the same
      #   as distributed on https://sourceforge.net/projects/android-ports-for-gnu-emacs
      # MEMO:
      #   gnutls is only ported to x86_64, armv7, aarch64
    - name: get gnutls from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/gnutls-3.7.8-emacs.tar.gz
        tar xvfz gnutls-3.7.8-emacs.tar.gz
      #
      # Get dependency of GNUTLS: gmp and apply patch to make the same
      #   as distributed on https://sourceforge.net/projects/android-ports-for-gnu-emacs
    - name: get gmp from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/gmp-6.2.1-emacs.tgz
        tar xvfz gmp-6.2.1-emacs.tgz
      #
      # Get dependency of GNUTLS: libtasn1
    - name: get libtasn1 from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/libtasn1-4.19.0-emacs.tar.gz
        tar xvfz libtasn1-4.19.0-emacs.tar.gz
    #
    # Get dependency of GNUTLS: p11-ki
    - name: get p11-kit from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/p11-kit-0.24.1-emacs.tar.gz
        tar xvfz p11-kit-0.24.1-emacs.tar.gz
    #
    # Get dependency of GNUTLS: nettle
    - name: get nettle from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/nettle-3.8-emacs.tar.gz
        tar xvfz nettle-3.8-emacs.tar.gz
    #
    # Get TREE-SITTER
    - name: get tree-sitter from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/tree-sitter-0.20.7-emacs.tar.gz
        tar xvfz tree-sitter-0.20.7-emacs.tar.gz
    #
    # Get HARFBUZZ
    - name: get harfbuzz from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/harfbuzz-7.1.0-emacs.tar.gz
        tar xvfz harfbuzz-7.1.0-emacs.tar.gz
    #
    # Get sqlite3
    - name: get sqlite3 and patch it
      run: |
        git clone https://android.googlesource.com/platform/external/sqlite
        git -C sqlite checkout f63e8d96e298783c310c08030d4c51a875dae4cd
        patch --directory=sqlite -p1 <<'EOS'
        diff --git a/dist/Android.mk b/dist/Android.mk
        index bf277d2..36734d9 100644
        --- a/dist/Android.mk
        +++ b/dist/Android.mk
        @@ -141,6 +141,7 @@ include $(BUILD_HOST_EXECUTABLE)
         include $(CLEAR_VARS)
         LOCAL_SRC_FILES := $(common_src_files)
         LOCAL_CFLAGS += $(minimal_sqlite_flags)
        +LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)
         LOCAL_MODULE:= libsqlite_static_minimal
         LOCAL_SDK_VERSION := 23
         include $(BUILD_STATIC_LIBRARY)
        
        diff --git a/dist/sqlite3.c b/dist/sqlite3.c
        index b0536a4..8fa1ee9 100644
        --- a/dist/sqlite3.c
        +++ b/dist/sqlite3.c
        @@ -26474,7 +26474,7 @@ SQLITE_PRIVATE const char *sqlite3OpcodeName(int i){
         */
         #if !defined(HAVE_POSIX_FALLOCATE) \
               && (_XOPEN_SOURCE >= 600 || _POSIX_C_SOURCE >= 200112L)
        -# define HAVE_POSIX_FALLOCATE 1
        +/* # define HAVE_POSIX_FALLOCATE 1 */
         #endif
        
         /*
        EOS
    #
    # Get icu4c and patch it.
    - name: get icu4c and patch it
      run: |
        git clone https://android.googlesource.com/platform/external/icu/
        git -C icu checkout nougat-release
        patch --directory=icu -p1<<'EOS'
        diff --git a/icu4j/Android.mk b/icu4j/Android.mk
        index d1ab3d5..69eff81 100644
        --- a/icu4j/Android.mk
        +++ b/icu4j/Android.mk
        @@ -69,7 +69,7 @@ include $(BUILD_STATIC_JAVA_LIBRARY)
         # Path to the ICU4C data files in the Android device file system:
         icu4c_data := /system/usr/icu
         icu4j_config_root := $(LOCAL_PATH)/main/classes/core/src
        -include external/icu/icu4j/adjust_icudt_path.mk
        +include $(LOCAL_PATH)/adjust_icudt_path.mk
        
         include $(CLEAR_VARS)
         LOCAL_SRC_FILES := $(icu4j_src_files)
        
        diff --git a/icu4c/source/common/Android.mk b/icu4c/source/common/Android.mk
        index 8e5f757..44bb130 100644
        --- a/icu4c/source/common/Android.mk
        +++ b/icu4c/source/common/Android.mk
        @@ -231,7 +231,7 @@ include $(CLEAR_VARS)
         LOCAL_SRC_FILES += $(src_files)
         LOCAL_C_INCLUDES += $(c_includes) $(optional_android_logging_includes)
         LOCAL_CFLAGS += $(local_cflags) -DPIC -fPIC
        -LOCAL_SHARED_LIBRARIES += libdl $(optional_android_logging_libraries)
        +LOCAL_SHARED_LIBRARIES += libdl libstdc++ $(optional_android_logging_libraries)
         LOCAL_MODULE_TAGS := optional
         LOCAL_MODULE := libicuuc
         LOCAL_RTTI_FLAG := -frtti
        EOS
    #
    # Get libxml2 and patch it.
    - name: get libxml2 and patch it
      run: |
        git clone https://android.googlesource.com/platform/external/libxml2/
        git -C libxml2 checkout nougat-release
        git -C libxml2 config user.email "you@example.com"
        git -C libxml2 config user.name "Your Name"
        git -C libxml2 revert edb5870767fed8712a9b77ef34097209b61ab2db
        patch --directory libxml2 -p1<<'EOS'
        diff --git a/Android.mk b/Android.mk
        index 07c7b372..24f67e49 100644
        --- a/Android.mk
        +++ b/Android.mk
        @@ -80,6 +80,7 @@ LOCAL_SHARED_LIBRARIES := libicuuc
         LOCAL_MODULE:= libxml2
         LOCAL_CLANG := true
         LOCAL_ADDITIONAL_DEPENDENCIES += $(LOCAL_PATH)/Android.mk
        +LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)
         include $(BUILD_SHARED_LIBRARY)
         
         # For the host
        @@ -94,3 +95,5 @@ LOCAL_MODULE := libxml2
         LOCAL_CLANG := true
         LOCAL_ADDITIONAL_DEPENDENCIES += $(LOCAL_PATH)/Android.mk
         include $(BUILD_HOST_STATIC_LIBRARY)
        +
        +$(call import-module,libicuuc)
        EOS
    #
    # get TIFF from Android ports for GNU Emacs
    - name: get tiff from Android ports for GNU Emacs
      run: |
        wget https://sourceforge.net/projects/android-ports-for-gnu-emacs/files/tiff-4.5.0-emacs.tar.gz
        tar xvfz tiff-4.5.0-emacs.tar.gz
    #
    # Get libjpeg-turbo and patch it.
    - name: get libjpeg-turbo and patch it
      run: |
        git clone https://android.googlesource.com/platform/external/libjpeg-turbo
        git -C libjpeg-turbo checkout nougat-release
        patch --directory=libjpeg-turbo -p1<<'EOS'
        diff --git a/Android.mk b/Android.mk
        index 2801805f..ab94028e 100644
        --- a/Android.mk
        +++ b/Android.mk
        @@ -75,6 +75,9 @@ ifneq (,$(TARGET_BUILD_APPS))
          LOCAL_SDK_VERSION := 17
         endif
         
        +# Added to build with GNU Emacs on Android
        +LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)
        +
         # Build as a static library.
         LOCAL_MODULE := libjpeg_static
         include $(BUILD_STATIC_LIBRARY)
        EOS
    #
    # Get webp  and if armv7 patch it
    - name: get webp and if armv7 patch it
      run: |
        # webp still has Android.mk
        git clone https://android.googlesource.com/platform/external/webp
        if [ ${{ matrix.abi }} == "armv7a" ]
        then
          echo "FIXME: NOT WRITTEN YET."
        fi
    #
    # Get libpng
    - name: get libpng
      run: |
        git clone https://android.googlesource.com/platform/external/libpng
        git -C libpng checkout nougat-release
    #
    # Get giflib and patch it
    - name: get giflib and patch it
      run: |
        git clone https://android.googlesource.com/platform/external/giflib
        git -C giflib checkout nougat-release
        patch --directory=giflib -p1<<'EOS'
        diff --git a/Android.mk b/Android.mk
        index 03a9355..13a93d0 100644
        --- a/Android.mk
        +++ b/Android.mk
        @@ -14,4 +14,5 @@ LOCAL_SRC_FILES := \
         LOCAL_CFLAGS += -Wno-format -Wno-sign-compare -Wno-unused-parameter -DHAVE_CONFIG_H
         LOCAL_MODULE:= libgif
        
        +LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)
         include $(BUILD_STATIC_LIBRARY)
    #
    # Get selinux and patch it
    - name: get selinux and patch it
      run: |
        git clone https://android.googlesource.com/platform/external/libselinux
        git -C libselinux checkout nougat-release
        patch  --directory=libselinux -p1 << 'EOS'
        diff --git a/Android.mk b/Android.mk
        index 659232e..1e64fd6 100644
        --- a/Android.mk
        +++ b/Android.mk
        @@ -116,3 +116,7 @@ LOCAL_STATIC_LIBRARIES := libselinux
         LOCAL_WHOLE_STATIC_LIBRARIES := libpcre
         LOCAL_C_INCLUDES := external/pcre
         include $(BUILD_HOST_EXECUTABLE)
        +
        +$(call import-module,libpcre)
        +$(call import-module,libpackagelistparser)
        +$(call import-module,libcrypto)
        
        diff --git a/src/android.c b/src/android.c
        index 5206a9f..b351ffc 100644
        --- a/src/android.c
        +++ b/src/android.c
        @@ -21,8 +21,7 @@
         #include <selinux/label.h>
         #include <selinux/avc.h>
         #include <openssl/sha.h>
        -#include <private/android_filesystem_config.h>
        -#include <log/log.h>
        +#include <android/log.h>
         #include "policy.h"
         #include "callbacks.h"
         #include "selinux_internal.h"
        @@ -686,6 +685,7 @@ static int seapp_context_lookup(enum seapp_kind kind,
         		seinfo = parsedseinfo;
         	}
        
        +#if 0
         	userid = uid / AID_USER;
         	isOwner = (userid == 0);
         	appid = uid % AID_USER;
        @@ -702,9 +702,13 @@ static int seapp_context_lookup(enum seapp_kind kind,
         		username = "_app";
         		appid -= AID_APP;
         	} else {
        +#endif
         		username = "_isolated";
        +		appid = 0;
        +#if 0
         		appid -= AID_ISOLATED_START;
         	}
        +#endif
        
         	if (appid >= CAT_MAPPING_MAX_ID || userid >= CAT_MAPPING_MAX_ID)
         		goto err;
        @@ -1662,8 +1666,10 @@ int selinux_log_callback(int type, const char *fmt, ...)
        
             va_start(ap, fmt);
             if (vasprintf(&strp, fmt, ap) != -1) {
        +#if 0
                 LOG_PRI(priority, "SELinux", "%s", strp);
                 LOG_EVENT_STRING(AUDITD_LOG_TAG, strp);
        +#endif
                 free(strp);
             }
             va_end(ap);
        EOS

    #
    # Get libpackagelistparser
    - name: get libpackagelistparser
      run: |
        git clone https://android.googlesource.com/platform/system/core
        git -C core checkout nougat-mr1-dev
        cp -r core/libpackagelistparser .
    #
    # Get libpcre
    - name: get libpcre
      run: |
        git clone https://android.googlesource.com/platform/external/pcre
        git -C pcre checkout nougat-release
    #
    # Get libcrypto and patch it
    - name: get libcrypto and patch it
      run: |
        git clone https://android.googlesource.com/platform/external/boringssl
        git -C boringssl checkout nougat-release
        patch --directory=boringssl -p1 <<'EOS'
        diff --git a/Android.mk b/Android.mk
        index 3e3ef2a..277d4a9 100644
        --- a/Android.mk
        +++ b/Android.mk
        @@ -27,7 +27,9 @@ LOCAL_MODULE := libcrypto
         LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)/src/include
         LOCAL_ADDITIONAL_DEPENDENCIES := $(LOCAL_PATH)/Android.mk $(LOCAL_PATH)/crypto-sources.mk
         LOCAL_CFLAGS += -fvisibility=hidden -DBORINGSSL_SHARED_LIBRARY -DBORINGSSL_IMPLEMENTATION -DOPENSSL_SMALL -Wno-unused-parameter
        +LOCAL_CFLAGS_arm = -DOPENSSL_STATIC_ARMCAP -DOPENSSL_NO_ASM
         LOCAL_SDK_VERSION := 9
        +LOCAL_LDFLAGS = --no-undefined
         # sha256-armv4.S does not compile with clang.
         LOCAL_CLANG_ASFLAGS_arm += -no-integrated-as
         LOCAL_CLANG_ASFLAGS_arm64 += -march=armv8-a+crypto
        diff --git a/sources.mk b/sources.mk
        index e82f3d5..be3a3c4 100644
        --- a/sources.mk
        +++ b/sources.mk
        @@ -337,20 +337,20 @@ linux_aarch64_sources := \
           linux-aarch64/crypto/sha/sha256-armv8.S\
           linux-aarch64/crypto/sha/sha512-armv8.S\
        
        -linux_arm_sources := \
        -  linux-arm/crypto/aes/aes-armv4.S\
        -  linux-arm/crypto/aes/aesv8-armx32.S\
        -  linux-arm/crypto/aes/bsaes-armv7.S\
        -  linux-arm/crypto/bn/armv4-mont.S\
        -  linux-arm/crypto/modes/ghash-armv4.S\
        -  linux-arm/crypto/modes/ghashv8-armx32.S\
        -  linux-arm/crypto/sha/sha1-armv4-large.S\
        -  linux-arm/crypto/sha/sha256-armv4.S\
        -  linux-arm/crypto/sha/sha512-armv4.S\
        -  src/crypto/chacha/chacha_vec_arm.S\
        -  src/crypto/cpu-arm-asm.S\
        -  src/crypto/curve25519/asm/x25519-asm-arm.S\
        -  src/crypto/poly1305/poly1305_arm_asm.S\
        +# linux_arm_sources := \
        +#   linux-arm/crypto/aes/aes-armv4.S\
        +#   linux-arm/crypto/aes/aesv8-armx32.S\
        +#   linux-arm/crypto/aes/bsaes-armv7.S\
        +#   linux-arm/crypto/bn/armv4-mont.S\
        +#   linux-arm/crypto/modes/ghash-armv4.S\
        +#   linux-arm/crypto/modes/ghashv8-armx32.S\
        +#   linux-arm/crypto/sha/sha1-armv4-large.S\
        +#   linux-arm/crypto/sha/sha256-armv4.S\
        +#   linux-arm/crypto/sha/sha512-armv4.S\
        +#   src/crypto/chacha/chacha_vec_arm.S\
        +#   src/crypto/cpu-arm-asm.S\
        +#   src/crypto/curve25519/asm/x25519-asm-arm.S\
        +#   src/crypto/poly1305/poly1305_arm_asm.S\
        
         linux_x86_sources := \
           linux-x86/crypto/aes/aes-586.S\
        EOS
    #
    # Get jansson and patch it
    - name: get jansson and patch it
      run: |
        git clone https://github.com/akheron/jansson
        patch --directory=jansson -p1  << 'EOS'
        diff --git a/Android.mk b/Android.mk
        index e3b09e7..e9c59d6 100644
        --- a/Android.mk
        +++ b/Android.mk
        @@ -27,4 +27,5 @@ LOCAL_CFLAGS += -O3 -DHAVE_STDINT_H=1
         
         LOCAL_MODULE:= libjansson
         
        +LOCAL_EXPORT_INCLUDES := $(LOCAL_C_INCLUDES)
         include $(BUILD_SHARED_LIBRARY)
        diff --git a/android/jansson_private_config.h b/android/jansson_private_config.h
        new file mode 100644
        index 0000000..618a0da
        --- /dev/null
        +++ b/android/jansson_private_config.h
        @@ -0,0 +1,43 @@
        +/*
        + * Copyright (c) 2010-2016 Petri Lehtinen <petri@digip.org>
        + *
        + * Jansson is free software; you can redistribute it and/or modify
        + * it under the terms of the MIT license. See LICENSE for details.
        + *
        + *
        + * This file specifies a part of the site-specific configuration for
        + * Jansson, namely those things that affect the public API in
        + * jansson.h.
        + *
        + * The configure script copies this file to jansson_config.h and
        + * replaces @var@ substitutions by values that fit your system. If you
        + * cannot run the configure script, you can do the value substitution
        + * by hand.
        + */
        +
        +#ifndef JANSSON_CONFIG_H
        +#define JANSSON_CONFIG_H
        +
        +/* If your compiler supports the inline keyword in C, JSON_INLINE is
        +   defined to `inline', otherwise empty. In C++, the inline is always
        +   supported. */
        +#ifdef __cplusplus
        +#define JSON_INLINE inline
        +#else
        +#define JSON_INLINE inline
        +#endif
        +
        +/* If your compiler supports the `long long` type and the strtoll()
        +   library function, JSON_INTEGER_IS_LONG_LONG is defined to 1,
        +   otherwise to 0. */
        +#define JSON_INTEGER_IS_LONG_LONG 1
        +
        +/* If locale.h and localeconv() are available, define to 1,
        +   otherwise to 0. */
        +#define JSON_HAVE_LOCALECONV 0
        +
        +/* Maximum recursion depth for parsing JSON input.
        +   This limits the depth of e.g. array-within-array constructions. */
        +#define JSON_PARSER_MAX_DEPTH 2048
        +
        +#endif
        EOS
    #
    # Run autogen.sh
    - name: run autogen.sh
      run: |
        ./autogen.sh
    #
    # Run configure
    - name: run configure
      run: >-
        ./configure
        --with-android=$ANDROID_HOME/platforms/android-${{ matrix.api-version }}/android.jar
        ANDROID_CC=$ANDROID_HOME/ndk/${{ matrix.ndk-version }}/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ matrix.abi }}-linux-android${{ matrix.minsdk }}-clang
        SDK_BUILD_TOOLS=$ANDROID_HOME/build-tools/33.0.0
        "--with-ndk-path=$(pwd)/gmp-6.2.1 $(pwd)/gnutls-3.7.8 $(pwd)/libtasn1-4.19.0 $(pwd)/nettle-3.8 $(pwd)/p11-kit-0.24.1 $(pwd)/tree-sitter-0.20.7 $(pwd)/harfbuzz-7.1.0 $(pwd)/sqlite/dist $(pwd)/icu $(pwd)/libxml2 $(pwd)/tiff-4.5.0 $(pwd)/libjpeg-turbo $(pwd)/webp $(pwd)/libpng $(pwd)/giflib $(pwd)/libselinux $(pwd)/libpackagelistparser $(pwd)/pcre $(pwd)/boringssl $(pwd)/jansson"
        ANDROID_CFLAGS="-isystem $(pwd)/core/include"
        --with-shared-user-id=com.termux
        --with-gnutls=yes
        --with-tree-sitter=yes
        --with-harfbuzz=yes
        --with-sqlite3=yes
        --with-xml2=yes
        --with-tiff=yes
        --with-jpeg=yes
        --with-webp=yes
        --with-png=yes
        --with-gif
        --with-selinux=yes
        --with-json
    #
    # Run make to build apk.
    - name: run make
      run: |
        make -j$(nproc)
    #
    # Upload apk as artifacts.
    - name: upload apk
      uses: actions/upload-artifact@v3
      with:
        name: Emacs.apk
        path: ./java/*.apk
